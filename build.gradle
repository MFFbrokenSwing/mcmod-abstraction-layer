buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.15.0"
    id "com.jfrog.bintray" version "1.8.4"
}

allprojects {
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://repo1.maven.org/maven2/" }
    }
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'com.github.hierynomus.license'

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    group 'com.github.mffbrokenswing'

    version = "0.0.1-" + (System.env.TRAVIS ? System.env.TRAVIS_BUILD_NUMBER : "local")

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    compileJava.options.encoding = 'UTF-8'

    dependencies {
        testCompile 'org.assertj:assertj-core-java8:1.0.0m1'
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:2.8.47'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    license {
        header = file(rootDir.toString() + '/HEADER')
        mapping {
            java = "SLASHSTAR_STYLE"
        }
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = 'MFFBrokenSwing'
        strictCheck = true
    }

    artifacts {
        archives sourcesJar, javadocJar
    }

    bintray {
        user = System.env.BINTRAY_USER
        key = System.env.BINTRAY_KEY
        publications  = ['Publish']
        pkg {
            repo = 'mcmod-abstraction-layer'
            version {
                name = project.version
                desc = 'Library mod for Minecraft modders'
                released = new Date()
                vcsTag = project.version
            }
        }
    }

    classes.dependsOn licenseFormat
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

project(":abstraction") {
    archivesBaseName = "mcmod-abstraction-layer"

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.2'
    }

    bintray {
        pkg {
            name = 'mcmod-abstraction-layer'
        }
    }

}

project(":forge-bindings") {
    archivesBaseName = "mcmod-abstraction-forge-1.12-bindings"

    dependencies {
        api project(":abstraction")
    }

    bintray {
        pkg {
            name = 'mcmod-abstraction-forge-bindings'
        }
    }

}
